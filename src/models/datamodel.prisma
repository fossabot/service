enum Role {
  Free
  Premium
}

enum AccountStatus {
  Pending
  Active
  Deactive
}

type Account {
  id: UUID! @id
  username: String! @unique
  password: String!
  email: String! @unique
  role: Role! @default(value: Free)
  status: AccountStatus @default(value: Pending)
  settings: Json
  users: [User!] @relation(name: "Account_User", onDelete: CASCADE)
  posts: [Post!] @relation(name: "Account_Post", onDelete: CASCADE)
  pets: [Pet!] @relation(name: "Account_Pet", onDelete: CASCADE)
  images: [Image!] @relation(name: "Account_Image", onDelete: CASCADE)
  comments: [Comment!] @relation(name: "Account_Comment")
  reviews: [Review!] @relation(name: "Account_Review")
  petImages: [PetImage!] @relation(name: "Account_PetImage", onDelete: CASCADE)
  like: [Like!] @relation(name: "Account_Like", onDelete: CASCADE)
  reports: [Report!] @relation(name: "Account_Report", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type User {
  id: UUID! @id
  name: String!
  phoneNumber: String!
  address: Json!
  bio: String
  dob: DateTime
  avatar: Image @relation(link: INLINE)
  settings: Json
  account: Account! @relation(name: "Account_User")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

enum PostStatus {
  Pending
  New
  Done
  Expired
}

type Post {
  id: UUID! @id
  title: String!
  description: String
  location: String!
  price: Int! @default(value: 0)
  dueDate: DateTime!
  settings: Json
  status: PostStatus! @default(value: New)
  postTags: [PostTag!] @relation(name: "PostTag_Post", onDelete: CASCADE)
  comments: [Comment!] @relation(name: "Post_Comment", onDelete: CASCADE)
  reviews: [Review!] @relation(name: "Post_Review", onDelete: CASCADE)
  reports: [Report!] @relation(name: "Post_Report", onDelete: CASCADE)
  account: Account! @relation(name: "Account_Post")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

enum PetType {
  Dog
  Cat
  Bird
  Fish
  Snake
  Hare
  Hamster
  Other
}

type Pet {
  id: UUID! @id
  type: PetType!
  info: Json
  post: Post! @relation(link: INLINE)
  account: Account! @relation(name: "Account_Pet")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Tag {
  id: UUID! @id
  title: String!
  description: String
  postTags: [PostTag!] @relation(name: "PostTag_Tag", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type PostTag {
  id: UUID! @id
  post: Post! @relation(name: "PostTag_Post")
  tag: Tag! @relation(name: "PostTag_Tag")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type PetImage {
  id: UUID! @id
  image: Image! @relation(link: INLINE)
  pet: Pet! @relation(link: INLINE)
  account: Account! @relation(name: "Account_PetImage")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Image {
  id: UUID! @id
  publicId: String! @unique
  url: String!
  account: Account! @relation(name: "Account_Image")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Comment {
  id: UUID! @id
  message: String!
  image: Image @relation(link: INLINE)
  likes: Int! @default(value: 0)
  post: Post! @relation(name: "Post_Comment")
  createdBy: Account! @relation(name: "Account_Comment")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Review {
  id: UUID! @id
  message: String!
  stars: Int!
  image: Image @relation(link: INLINE)
  likes: Int! @default(value: 0)
  post: Post! @relation(name: "Post_Review")
  createdBy: Account! @relation(name: "Account_Review")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Like {
  id: UUID! @id
  count: Int! @default(value: 0)
  account: Account! @relation(name: "Account_Like")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type PostLike {
  id: UUID! @id
  post: Post! @relation(link: INLINE)
  like: Like! @relation(link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type CommentLike {
  id: UUID! @id
  comment: Comment! @relation(link: INLINE)
  like: Like! @relation(link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type ReviewLike {
  id: UUID! @id
  review: Review! @relation(link: INLINE)
  like: Like! @relation(link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Report {
  id: UUID! @id
  reason: String!
  post: Post! @relation(name: "Post_Report")
  createdBy: Account! @relation(name: "Account_Report")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}
